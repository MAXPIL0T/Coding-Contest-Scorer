name: Run MATLAB Tests

on:
  repository_dispatch:
    types: [test-suite]

jobs:
  run-tests:
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Fetch solver.m from repo1 pull request
      run: |
        git clone https://github.com/MAXPIL0T/Coding-Contest.git temp_repo1
        cd temp_repo1
        git fetch origin pull/${{ github.event.client_payload.pr_number }}/head:pr_branch
        git checkout pr_branch
        cp soln.m ../soln.m
        cd ..

    - name: Set up MATLAB
      uses: matlab-actions/setup-matlab@v2

    - name: Run custom testing procedure
      id: run-tests
      uses: matlab-actions/run-command@v2
      with:
        command: |
          disp('Running my task'); 
          processSolver("${{ github.event.client_payload.actor }}", "${{ github.event.client_payload.sha }}");
          % fid = fopen('score.txt', 'wt');
          % fprintf(fid, score);
          % fclose(fid);
          % fid = fopen('highest.txt', 'wt');
          % fprintf(fid, highestScore);
          % fclose(fid);

    # - name: Get scores
    #   id: get-scores
    #   shell: pwsh
    #   run: |
    #     $highest_score = Get-Content highest.txt
    #     $current_score = Get-Content score.txt
    #     Write-Output "::set-output name=highest_score::$highest_score"
    #     Write-Output "::set-output name=current_score::$current_score"

    # - name: Check if the score is higher
    #   id: check-score
    #   shell: pwsh
    #   run: |
    #     $highest_score = [int]${{ steps.get-scores.outputs.highest_score }}
    #     $current_score = [int]${{ steps.get-scores.outputs.current_score }}
    #     if ($current_score -gt $highest_score) {
    #       Write-Output "Is highest: true"
    #       Write-Output "::set-output name=accept_pr::true"
    #     } else {
    #       Write-Output "Is highest: false"
    #       Write-Output "::set-output name=accept_pr::false"
    #     }
    
    # - name: Comment on PR with score
    #   shell: pwsh
    #   run: |
    #     $body = "The score for this pull request is ${{ steps.get-scores.outputs.current_score }}."
    #     $pr_number = ${{ github.event.client_payload.pr_number }}
    #     $token = ${{ secrets.GITHUB_TOKEN }}
    #     $repo = 'MAXPIL0T/Coding-Contest'
    #     $url = "https://api.github.com/repos/$repo/issues/$pr_number/comments"
    #     Invoke-RestMethod -Method Post -Uri $url -Headers @{ Authorization = "token $token" } -Body (@{ body = $body } | ConvertTo-Json)

    # - name: Accept or reject PR
    #   if: steps.check-score.outputs.accept_pr == 'true'
    #   shell: pwsh
    #   run: |
    #     $pr_number = ${{ github.event.client_payload.pr_number }}
    #     $token = ${{ secrets.GITHUB_TOKEN }}
    #     $repo = 'MAXPIL0T/Coding-Contest'
    #     $url = "https://api.github.com/repos/$repo/pulls/$pr_number/merge"
    #     $body = @{ commit_title = "Merging PR as new score is higher" } | ConvertTo-Json
    #     Invoke-RestMethod -Method Put -Uri $url -Headers @{ Authorization = "token $token"; Accept = "application/vnd.github.v3+json" } -Body $body



    - name: Commit and push changes
      run: |
        date > last-run.txt
        git config user.name github-actions
        git config user.email github-actions@github.com
        git add .
        git commit -m "generated"
        git push

    # - name: Comment on PR with score
    #   run: |
    #     curl -X POST -H "Authorization: token ${{ secrets.GH_TOKEN }}" \
    #       -H "Accept: application/vnd.github.v3+json" \
    #       https://api.github.com/repos/MAXPIL0T/Coding-Contest/issues/${{ github.event.client_payload.pr_number }}/comments \
    #       -d '{"body":"The score for this pull request is ${{ steps.get-score.outputs.score }}."}'

    # - name: Accept or reject PR
    #   if: steps.check-score.outputs.accept_pr == 'true'
    #   run: |
    #     curl -X PUT -H "Authorization: token ${{ secrets.GH_TOKEN }}" \
    #       -H "Accept: application/vnd.github.v3+json" \
    #       https://api.github.com/repos/MAXPIL0T/Coding-Contest/pulls/${{ github.event.client_payload.pr_number }}/merge \
    #       -d '{"commit_title":"Merging PR as new score is higher"}'














    # - name: Commit and push changes
    #   run: |
    #     date > last-run.txt
    #     git config user.name github-actions
    #     git config user.email github-actions@github.com
    #     git add .
    #     git commit -m "generated"
    #     git push

    # - name: Get test score
    #   id: get-score
    #   run: |
    #     score=$(grep 'Score:' result.txt | awk '{print $2}')
    #     echo "::set-output name=score::$score"

    # - name: Checkout repo1
    #   uses: actions/checkout@v4
    #   with:
    #     repository: MAXPIL0T/Coding-Contest
    #     token: ${{ secrets.GH_TOKEN }}
    #     path: repo1

    # - name: Update score in repo1
    #   run: |
    #     cd repo1
    #     echo "${{ github.event.client_payload.pr_number }},${{ steps.get-score.outputs.score }}" >> scores.csv
    #     git config --global user.email "github-actions@github.com"
    #     git config --global user.name "GitHub Actions"
    #     git add scores.csv
    #     git commit -m "Update scores"
    #     git push

    # - name: Check if the score is higher
    #   id: check-score
    #   run: |
    #     previous_high_score=$(cat repo1/scores.csv | awk -F, 'BEGIN {max=0} {if ($2 > max) max=$2} END {print max}')
    #     if [ ${{ steps.get-score.outputs.score }} -gt $previous_high_score ]; then
    #       echo "The new score is higher"
    #       echo "::set-output name=accept_pr::true"
    #     else
    #       echo "The new score is not higher"
    #       echo "::set-output name=accept_pr::false"

    # - name: Comment on PR with score
    #   run: |
    #     curl -X POST -H "Authorization: token ${{ secrets.GH_TOKEN }}" \
    #       -H "Accept: application/vnd.github.v3+json" \
    #       https://api.github.com/repos/MAXPIL0T/Coding-Contest/issues/${{ github.event.client_payload.pr_number }}/comments \
    #       -d '{"body":"The score for this pull request is ${{ steps.get-score.outputs.score }}."}'

    # - name: Accept or reject PR
    #   if: steps.check-score.outputs.accept_pr == 'true'
    #   run: |
    #     curl -X PUT -H "Authorization: token ${{ secrets.GH_TOKEN }}" \
    #       -H "Accept: application/vnd.github.v3+json" \
    #       https://api.github.com/repos/MAXPIL0T/Coding-Contest/pulls/${{ github.event.client_payload.pr_number }}/merge \
    #       -d '{"commit_title":"Merging PR as new score is higher"}'
